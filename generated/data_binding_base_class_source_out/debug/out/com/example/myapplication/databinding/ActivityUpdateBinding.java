// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final Button updateButton;

  @NonNull
  public final EditText updateEventDate;

  @NonNull
  public final EditText updateEventLocation;

  @NonNull
  public final EditText updateEventName;

  @NonNull
  public final EditText updateEventTime;

  private ActivityUpdateBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imageView,
      @NonNull Button updateButton, @NonNull EditText updateEventDate,
      @NonNull EditText updateEventLocation, @NonNull EditText updateEventName,
      @NonNull EditText updateEventTime) {
    this.rootView = rootView;
    this.imageView = imageView;
    this.updateButton = updateButton;
    this.updateEventDate = updateEventDate;
    this.updateEventLocation = updateEventLocation;
    this.updateEventName = updateEventName;
    this.updateEventTime = updateEventTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.updateButton;
      Button updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      id = R.id.updateEventDate;
      EditText updateEventDate = ViewBindings.findChildViewById(rootView, id);
      if (updateEventDate == null) {
        break missingId;
      }

      id = R.id.updateEventLocation;
      EditText updateEventLocation = ViewBindings.findChildViewById(rootView, id);
      if (updateEventLocation == null) {
        break missingId;
      }

      id = R.id.updateEventName;
      EditText updateEventName = ViewBindings.findChildViewById(rootView, id);
      if (updateEventName == null) {
        break missingId;
      }

      id = R.id.updateEventTime;
      EditText updateEventTime = ViewBindings.findChildViewById(rootView, id);
      if (updateEventTime == null) {
        break missingId;
      }

      return new ActivityUpdateBinding((ConstraintLayout) rootView, imageView, updateButton,
          updateEventDate, updateEventLocation, updateEventName, updateEventTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
